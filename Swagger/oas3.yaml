openapi: 3.0.0

info:
    title: Treport
    version: v.0

paths:  
    /users:
        get:
            description: Get a user list. (/users?user_level={user_level}).
            parameters:
              - in: query
                name: user_level
                description: Get all user of the given user_level.
                schema:    
                    $ref: "#/components/schemas/User_level"
            responses:
              "200":
                description: Correctly sent users list.
                content:
                    application/json:
                        schema:
                            type: array
                            items: 
                                $ref: "#/components/schemas/User" 
        post:
            description: Add new user
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            $ref: "#/components/schemas/User"
                required: true

            responses:
              "201":
                description: New user added
                headers:
                    "Location":
                        description: Link to the newly created user
                        schema:
                            type: string
    /users/{id}:
        get:
            description: Get a user by id
            responses:
              "200":
                description: User sent correctly.
        delete:
            description: Delete a user.
            responses:
                "204":
                    description: User deleted.

    /reports:
        get:
            description: Get a list of reports. (/reports?state={state}&kind={kind}&category={category}&position={position})
            parameters:
                -   in: query
                    name: state
                    description: Filters the reports based on a state
                    schema:
                        $ref: "#/components/schemas/State"
                -   in: query
                    name: kind
                    description: Filters the reports based on a kind
                    schema: 
                        $ref: "#/components/schemas/Kind"
                -   in: query
                    name: category
                    description: Filters the reports based on a category
                    schema: 
                        $ref: "#/components/schemas/Category"
                -   in: query
                    name: position
                    description: Returns all the reports within 1 kilometer from the given position 
                    schema: 
                        $ref: "#/components/schemas/Position"
            responses: 
                "200":
                    description: Correctly sent a list of reports
                    content:
                        application/json:
                            schema:
                                type: array
                                items: 
                                    $ref: "#/components/schemas/Report"
        post:
            description: Add a new report.
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Report"
                required: true
            responses:
                "201":
                    description: Added a new report
                    headers:
                        "Location":
                            description: Link to the newly created report.
                            schema:
                                type: string
    /reports/{id}:
        get:
            description: Get a report by the id.
            responses:
                "200":
                    description: Correctly sent the report.
        delete:
            description: Delete a report
            responses:
                "204":
                    description: Report deleted.

    

components:
    schemas:
        Report:
            type: object
            properties:
                id:
                    type: integer
                title: 
                    type: string
                content:
                    type: string
                user:
                    type: string
                votes:
                    type: integer
                position:
                    $ref: "#/components/schemas/Position"
                kind:
                    $ref: "#/components/schemas/Kind"
                category:
                    $ref: "#/components/schemas/Category"
                state:
                    $ref: "#/components/schemas/State"
                comments:
                    type: array
                    items: 
                        $ref: "#/components/schemas/Comment"

        Comment:
            type: object
            properties:
                id: 
                    type: integer
                content:
                    type: string
                user:
                    type: string

        User:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
                email:
                    type: string
                user_level:
                    $ref: "#/components/schemas/User_level"  
                reports:
                    type: array
                    items: 
                        type: string
                notifications:
                    type: array
                    items:
                        $ref: "#/components/schemas/Notification"
                

        Notification:
            type: object
            properties:
                id:
                    type: integer
                title:
                    type: string
                content:
                    type: string
                report:
                    type: string


        Kind: 
            type: string
            enum: [report, suggestion, complaint]

        Category:
            type: string
            enum: [lights, roads, trash]

        State:
            type: string
            enum: [active, work in progress, archived]

        User_level:
            type: string
            enum: [citizen, admin, not_logged]
            
        Position:
            type: string
